<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper
	namespace="com.ssafy.abctrip.users.model.mapper.UsersMapper">

	<resultMap type="usersDto" id="user">
		<result column="user_id" property="userId" />
		<result column="user_name" property="userName" />
		<result column="nick_name" property="nickName" />
		<result column="password" property="userPwd" />
		<result column="email_id" property="emailId" />
		<result column="email_domain" property="emailDomain" />
		<result column="refresh_token" property="refreshToken" />
		<result column="role" property="userRole" />
		<result column="created_at" property="createdAt" />
		<result column="updated_at" property="updatedAt" />
	</resultMap>

	<update id="updatePassword" parameterType="map">
	    update users 
	    set password = #{userPwd}, updated_at = NOW()
	    where email_id = #{emailId}
	        and email_domain = #{emailDomain}
	</update>
	
	<select id="checkUserId" parameterType="string" resultType="boolean">
		select count(*) > 0
		from users
		where user_id = #{userId} 
	</select>

	<insert id="register" parameterType="usersDto">
		insert into users (user_id, user_name, nick_name, password, email_id, email_domain, role, created_at, updated_at)
		values (#{userId}, #{userName}, #{nickName}, #{userPwd}, #{emailId}, #{emailDomain}, #{userRole}, NOW(), NOW())
	</insert>

	<select id="userInfo" parameterType="string" resultMap="user">
		select *
		from users
		where user_id = #{userId}
	</select>

	<select id="login" parameterType="map" resultMap="user">
		select user_id, user_name, nick_name, refresh_token, role
		from users
		where user_id = #{userId} and password = #{userPwd}
	</select>

	<update id="modify" parameterType="usersDto">
		update users set 	password = #{userPwd},
							nick_name = #{nickName},
							email_id = #{emailId},
							email_domain = #{emailDomain},
							updated_at = NOW()
		where user_id = #{userId}
	</update>
	
	<delete id="remove" parameterType="string">
	    delete from users where user_id = #{userId}
	</delete>

	<update id="saveRefreshToken" parameterType="map">
		update users
		set refresh_token = #{refreshToken}
		where user_id = #{userId}
	</update>

	<select id="getRefreshToken" parameterType="string"
		resultType="string">
		select refresh_token
		from users
		where user_id = #{userId}
	</select>

	<update id="deleteRefreshToken" parameterType="map">
		update users
		set refresh_token = #{refreshToken, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>

</mapper>